#import "../assets/title_page.typ": *

#set page(margin: 2cm)
#set text(size: 14pt, font: "New Computer Modern")
#set heading(numbering: "1.1.1.")
#set figure.caption(separator: [ -- ])
#set figure(supplement: [Рисунок])

#show heading: it => align(center, it)

#title_page_me(
  4, 
  [Работа с SSH в Linux и Windows 10],
)

#outline(
  title: [Оглавление]
)

#pagebreak()

#set par(first-line-indent: 1.25cm, justify: true)
#set page(numbering: "1")

= Введение

#h(1.25cm) *Цель работы:* получить навыки по запуску Linux-приложений в Windows 10, а также запуску Windows-приложений из ОС Linux.

*Задание:*

#enum(
  [Проверить версию команды ssh
Например,
ssh –V],[
Подключиться к localhost (в среде Windows 10). Таким образом, находясь
физически на этой машине (Windows 10) можно осуществить имитацию работы с удаленной машиной (localhost), которая также будет этой же машиной. Подключиться можно, указав localhost или как вариант ip-адрес машины 127.0.0.1 или адрес локальной машины, который можно получить выполнив команду ipconfig и посмотрев IPv4-адрес (будет такого вида 192.168.0.45 или 192.168.145 или 10.0.1.45 или 10.1.1.45).
Например,
ssh localhost
ssh 127.0.0.1
ssh 192.168.1.45],[
Используя команду tar –version проверьте версию архиватора tar. Используя команду tar /? посмотрите краткую справку. С помощью команды tar --help посмотрите подробную справку. Заархивируйте несколько файлов в архив. Разархивируйте полученный архив.],[
Заархивируйте директорию. Разархивируйте полученный архив.
С помощью команды scp осуществить копирование трех файлов (каждый файл отдельно) через ssh c localhost на Windows 10 машину. Этой же
командой и в этой же среде скопировать директорию. Скопируйте архив, а
затем разархивируйте архив на новом месте.],[
С помощью команды scp осуществить копирование трех файлов (каждый файл отдельно) через ssh c Windows 10 машины на localhost. Этой же командой и в этой же среде скопировать директорию. Скопируйте архив, а затем разархивируйте архив на новом месте.],[
Используя WSL2 (среду Linux), подключиться посредством SSH к машине Windows 10. Если SSH (клиент или сервер) в Linux не установлен, следует осуществить установку.],[
С помощью команды scp осуществить копирование трех файлов (каждый файл отдельно) через ssh из среды Linux на Windows 10 машину. Этой же командой и в этой же среде скопировать директорию. Скопируйте архив, а затем разархивируйте архив на новом месте.],[
С помощью команды scp осуществить копирование трех файлов (каждый файл отдельно) через ssh c Windows 10 машины в среду Linux. Этой же командой и в этой же среде скопировать директорию. Скопируйте архив, а
затем разархивируйте архив на новом месте.],[
С помощью команды sftp осуществить подключение к localhost (в нашем случае это будет remote host по отношению к нашей локальной машине). Ознакомиться с командами sftp, используя команду help. Вывести версию sftp командой version. С помощью команды get загрузить с remote host на localhost три файла. С помощью команды put отправить с локальной машины на remote host три файла. Убедиться по всем командам, что копирование прошло корректно. В sftp доступна команда ls.],[
Осуществить подключение из WSL2 (Linux), используя команду sftp к Windows 10. Выполнить sftp-команды put и get (переслать три файла) по направлению Windows 10.],[
Осуществить подключение из Windows 10 используя команду sftp к WSL2 (Linux). Выполнить sftp-команды put и get (переслать три файла) по направлению WSL2 (Linux)],[
Самостоятельно выбрать ранее не использовавшиеся 2 опции каждой из команд scp, sftp, tar. Выполнить команды в среде Linux и Windows 10 с этими опциями и объяснить полученный результат.],[
Попробуйте скопировать файл со следующего ресурса (или любого другого удаленного доступного для работы ресурса) командами scp, sftp. `ftp://ftp.hp.com:21/pub/softpaq/sp40001/sp40001.cva` Объясните полученный результат по отношению к команде curl. Попробуйте скопировать этот же файл командой ftp (в среде Linux и Windows 10).]
)

#pagebreak()

= Теоретическое введение

#h(1.25cm) Команда SSH расшифровывается как secure shell. В состав Windows 10 входит встроенное программное обеспечение SSH клиент и SSH сервер.

OpenSSH Server устанавливает соединение с компьютером с
использованием
протокола
SSH.
Чтобы
подключиться
к
другим
компьютерам на которых установлен SSH-сервер необходимо установить
клиент OpenSSH.

SSH-сервер в Windows 10 работает как служба.
Для включения сервера OpenSSH в Windows 10 необходимо открыть
приложение Параметры, далее Приложения - Приложения и возможности.
Более подробную инструкцию по установке и запуску OpenSSH можно
посмотреть здесь: https://g-ek.com/openssh-server-v-windows-10.

Сервер прослушивает соединения от клиентских машин и при
установлении связи производит аутентификацию, после чего начинает
обслуживание клиента. Клиент используется для входа на удалённую
машину и выполнения команд.

Часто используемые технологии для работы:
telnet – сетевой протокол (и одноименная служебная программа
командной строки в Windows и Linux)
ssh – сетевой протокол (и одноименная служебная программа
командной строки в Windows 10 и Linux)
putty - клиентская программа для работы по сетевым протоколам telnet,
ssh, scp, sftp в Windows и Linux
far – (far manager) - файловый менеджер с текстовым интерфейсом в
Windows. Имеется порт на Linux. Изначально был разработан для Windows.
Имеется встроенный плагин под названием NetBox для удобной передачи
файлов по протоколам прикладного уровня ftp, sftp, scp, WebDAV.
mc – (midnight commander) - файловый менеджер с текстовыминтерфейсом в Linux. Имеется дистрибутив и для Windows. Изначально был
разработан для Linux.
ftp – один из старейших сетевых протоколов прикладного уровня для
копирования файлов и доступа к хостам (и одноименная служебная
программа командной строки в Windows 10 и Linux)
sftp – сетевой протокол прикладного уровня для копирования и
выполнения других операций с файлами поверх надёжного и безопасного
соединения (и одноименная служебная программа командной строки в
Windows 10 и Linux)
scp – сетевой протокол (и одноименная служебная программа
командной строки в Windows 10 и Linux) для копирования файлов
curl - служебная программа командной строки в Windows 10 и Linux,
позволяющая взаимодействовать с множеством различных серверов по
множеству различных протоколов с синтаксисом URL.

#pagebreak()

= Выполнение работы

== Проверка версии команды `ssh`

Проверим версию `ssh`

#figure(
  image("img/ssh_ver.png"),
  caption: [`ssh -V`]
)

== Подключение к localhost

Подключимся к `localhost` при помощи `ssh` 

#figure(
  image("img/ssh_localhost.png"),
  caption: [подключение к localhost по `ssh`]
)

== Работа с tar

Проверим версию `tar`

#figure(
  image("img/tar_ver.png"),
  caption: [`tar --version`]
)

Выполним команду `help`, чтобы посмотреть помощь по всем командам `tar`

#figure(
  image("img/tar_help.png"),
  caption: [`tar --help`]
)

Произведем архивацию файлов при помощи `tar`

#figure(
  image("img/tar_archive.png"),
  caption: [архивирование при помощи `tar`]
)

Произведем архивацию директории при помощи `tar`

#figure(
  image("img/tar_archive_dir.png"),
  caption: [архивирование директории при помощи `tar`]
)

== Копирование файлов с помощью scp

С помощью команды `scp` осуществим копирование трех файлов (каждый файл отдельно) через ssh c localhost на Windows 10 машину. Этой же командой и в этой же среде скопировать директорию. Скопируйте архив, а затем разархивируйте архив на новом месте

#figure(
  image("img/scp_files.png"),
  caption: [Копирование 3-х файлов при помощи `scp`]
)

#figure(
  image("img/tar_arch_copy.png"),
  caption: [Разархивирование архива в новом месте]
)

== Загрузка с сохранением под другим именем

Скопируем файлы и архив под другим именем при помощи `scp`, а затем распакуем архив в новом месте

#figure(
  image("img/scp_new_dir.png"),
  caption: [Загрузка и сохранение файла под другим именем]
)

#figure(
  image("img/tar_arch_new_place.png"),
  caption: [Разархивирование архива с новым именем]
)

== Подключение через WSL2 посредством ssh

Подключимся к компьютеру под управлением Windows 10 при помощи `ssh`, введя строку подключения в формате `<имя_учетной_записи_Windows>@<ip_компьютера>`

#figure(
  image("img/ssh_to_windows.png"),
  caption: [Подключение к `Windows` по `ssh`]
)

== Копирование файлов из виртуальной машины 

С помощью команды scp осуществим копирование трех файлов (каждый файл отдельно) через ssh из среды Linux на Windows 10 машину. Этой же командой и в этой же среде скопируем директорию. Скопируем архив, а затем разархивируйте архив на новом месте.

#figure(
  image("img/scp_to_windows.png"),
  caption: [Копирование файлов из виртуальной машины ]
)

== Копирование файлов с Windows на Linux через scp

#h(1.25cm) С помощью команды scp осуществим копирование трех файлов через `ssh` c Windows 10 машины в среду Linux. Этой же командой и в этой же среде скопируем директорию. Скопируем архив, а затем разархивируйте архив на новом месте.

#figure(
  image("img/scp_to_linux.png"),
  caption: [Копирование с файлов `Windows` на `Linux`]
)

== Подключение по sftp из Linux

#h(1.25cm) С помощью команды sftp осуществим подключение к localhost (в этом случае это будет `remote host` по отношению к нашей локальной машине). Ознакомимся с командами `sftp`, используя команду `help`. Выведем версию `sftp` командой `version`. С помощью команды get загрузим с `remote host` на `localhost` три файла. С помощью команды put отправим с локальной машины на `remote host` три файла. Убедимся по всем командам, что копирование прошло корректно. В `sftp` доступна команда `ls`.

#figure(
  image("img/sftp_connect.png"),
  caption: [Подключение к `localhost` через `ssh`]
)

#figure(
  image("img/sftp_help.png"),
  caption: [`sftp help`]
)

#figure(
  image("img/sftp_put.png"),
  caption: [`sftp put`]
)

#figure(
  image("img/sftp_get.png"),
  caption: [`sftp get`]
)

== Подключение по sftp из Windows

#h(1.25cm) Осуществим подключение из WSL2, используя команду `sftp`, к Windows 10. Выполнить команды `sftp` `put` и `get` по направлению Windows 10.

#figure(
  image("img/sftp_windows_connect.png"),
  caption: [Подлючение к `Windows` через `ssh`]
)

#figure(
  image("img/sftp_windows_put.png"),
  caption: [`sftp put`]
)

#figure(
  image("img/sftp_windows_get.png"),
  caption: [`sftp get`]
)

== Изучение двух новых опций для scp, sftp, и tar

*Опции для scp:*
- Использование опции `-l` для ограничения скорости передачи:
`scp -l 100 file_1.txt user@<ip_linux>:/home/user/`

#figure(
  image("img/scp_flag_l.png"),
  caption: [`scp -l`]
)

- Использование опции `-q` для скрытия вывода:
`scp -q file_1.txt user@<ip_linux>:/home/user/`

#figure(
  image("img/scp_flag_q.png"),
  caption: [`scp -q`]
)

*Опции для sftp:*
- Опция `-v` для получения более подробного вывода:
sftp` -v user@<ip_macos>`

#figure(
  image("img/sftp_flag_v.png"),
  caption: [`sftp -v`]
)

- Опция `-C` для включения сжатия данных:
`sftp -C user@<ip_macos>`

#figure(
  image("img/sftp_flag_c.png"),
  caption: [`sftp -c`]
)

*Опции для tar:*
- Опция `-z` для сжатия в формате `gzip`:
`tar -zcvf archive.tar.gz file_1.txt file_2.txt`

#figure(
  image("img/tar_flag_z.png"),
  caption: [`tar -z`]
)

- Опция `-t` для просмотра содержимого архива:
`tar -tf archive.tar.gz`

#figure(
  image("img/tar_flag_t.png"),
  caption: [`tar -t`]
)

#pagebreak()

== Загрузка файла через scp, sftp, ftp, curl

#h(1.25cm) scp и sftp используют SSH для безопасной передачи файлов, но они не подходят для работы с FTP-серверами, так как работают по порту 22 и требуют SSH-сервера на другой стороне. Протокол ftp предназначен для работы с FTP-серверами и использует порты 20 и 21, однако он не шифрует данные, что делает его менее безопасным. curl --  универсальный инструмент, который поддерживает различные протоколы, включая FTP, и может быть использован для загрузки файлов с FTP-серверов. это означает, что в данном случае получить файл можно только при помощи curl и ftp.

#pagebreak()

= Выводы

#h(1.25cm) В ходе проделанной работы были изучены и протестированы различные способы передачи данных и работы с архивами на Windows и Linux. Были использованы команды для проверки версий утилит (ssh, tar), подключения к локальной машине через SSH, создания и разархивирования файлов с использованием tar, а также копирования файлов через scp и sftp между Windows и Linux. В процессе выполнения заданий удалось успешно установить и настроить SSH-сервер, а также протестировать различные способы передачи данных с использованием протоколов FTP и SFTP.
